// <auto-generated />
using Beepbot.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Beepbot.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201013164604_AddNameToGuildChannel")]
    partial class AddNameToGuildChannel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Beepbot.Domain.Entities.Guild", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("Beepbot.Domain.Entities.GuildChannel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuildId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("GuildChannels");

                    b.HasDiscriminator<string>("Discriminator").HasValue("GuildChannel");
                });

            modelBuilder.Entity("Beepbot.Domain.Entities.Sound", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GuildId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("Sounds");
                });

            modelBuilder.Entity("Beepbot.Domain.Entities.CategoryChannel", b =>
                {
                    b.HasBaseType("Beepbot.Domain.Entities.GuildChannel");

                    b.HasDiscriminator().HasValue("CategoryChannel");
                });

            modelBuilder.Entity("Beepbot.Domain.Entities.TextChannel", b =>
                {
                    b.HasBaseType("Beepbot.Domain.Entities.GuildChannel");

                    b.HasDiscriminator().HasValue("TextChannel");
                });

            modelBuilder.Entity("Beepbot.Domain.Entities.VoiceChannel", b =>
                {
                    b.HasBaseType("Beepbot.Domain.Entities.GuildChannel");

                    b.HasDiscriminator().HasValue("VoiceChannel");
                });

            modelBuilder.Entity("Beepbot.Domain.Entities.GuildChannel", b =>
                {
                    b.HasOne("Beepbot.Domain.Entities.Guild", "Guild")
                        .WithMany("Channels")
                        .HasForeignKey("GuildId");
                });

            modelBuilder.Entity("Beepbot.Domain.Entities.Sound", b =>
                {
                    b.HasOne("Beepbot.Domain.Entities.Guild", "Guild")
                        .WithMany("Sounds")
                        .HasForeignKey("GuildId");
                });
#pragma warning restore 612, 618
        }
    }
}
